[{"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\loginPage\\loginForm.js":"4","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\signupPage\\signUp.js":"5","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\NavBar.js":"6","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\SignedInLinks.js":"7","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\SignedOutLinks.js":"8","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionUtilisateurs\\gestionUtilisateur.js":"9","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionUtilisateurs\\tableRow.js":"10","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\globalContext.js":"11","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionCours\\listCours.js":"12","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionCours\\tableRow.js":"13","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\AdminLinks.js":"14","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\ProfesseurLinks.js":"15","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\EtudiantsLinks.js":"16","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionEmploisTemps\\emploisList.js":"17","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionEmploisTemps\\tableRow.js":"18","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionServices\\listService.js":"19","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionServices\\TableRow.js":"20","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\SemestresContext.js":"21","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\CoursContext.js":"22","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\ModuleContext.js":"23","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\EdtContext.js":"24","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\NoteAbsenceContext.js":"25","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\NoteAbsence\\NoteAbsenceProf.js":"26","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\Edts\\ConsulterEdt.js":"27","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\NoteAbsence\\NoteAbsenceEtudiant.js":"28","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\Module\\ListeModuleByEtudiant.js":"29","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\Cours\\ConsulterCours.js":"30","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\services\\EdtService.js":"31","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\services\\NoteAbsenceService.js":"32","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\services\\ModuleService.js":"33","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\services\\CoursService.js":"34","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\Module\\ListeModulesByProf.js":"35","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\Semestres\\ConsulterSemestres.js":"36","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\services\\SemestresService.js":"37","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionServicesEtudiant\\listService.js":"38","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionServicesEtudiant\\TableRow.js":"39"},{"size":500,"mtime":499162500000,"results":"40","hashOfConfig":"41"},{"size":3144,"mtime":1612940043578,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":2799,"mtime":1612942923018,"results":"44","hashOfConfig":"41"},{"size":4402,"mtime":1612941054803,"results":"45","hashOfConfig":"41"},{"size":1253,"mtime":1612823997156,"results":"46","hashOfConfig":"41"},{"size":737,"mtime":1612181454804,"results":"47","hashOfConfig":"41"},{"size":523,"mtime":1612181040596,"results":"48","hashOfConfig":"41"},{"size":2142,"mtime":1612623255173,"results":"49","hashOfConfig":"41"},{"size":1020,"mtime":1612628583434,"results":"50","hashOfConfig":"41"},{"size":1181,"mtime":1612646255638,"results":"51","hashOfConfig":"41"},{"size":5013,"mtime":1612913511887,"results":"52","hashOfConfig":"41"},{"size":6640,"mtime":1612943742845,"results":"53","hashOfConfig":"41"},{"size":1013,"mtime":1612939905308,"results":"54","hashOfConfig":"41"},{"size":944,"mtime":1612939947016,"results":"55","hashOfConfig":"41"},{"size":1140,"mtime":1612940014753,"results":"56","hashOfConfig":"41"},{"size":4616,"mtime":1612903317774,"results":"57","hashOfConfig":"41"},{"size":5428,"mtime":1612903239264,"results":"58","hashOfConfig":"41"},{"size":2547,"mtime":1612938191585,"results":"59","hashOfConfig":"41"},{"size":5083,"mtime":1612939371152,"results":"60","hashOfConfig":"41"},{"size":417,"mtime":1612715890664,"results":"61","hashOfConfig":"41"},{"size":381,"mtime":1612608104840,"results":"62","hashOfConfig":"41"},{"size":394,"mtime":1612625464402,"results":"63","hashOfConfig":"41"},{"size":367,"mtime":1612455318774,"results":"64","hashOfConfig":"41"},{"size":443,"mtime":1612607825498,"results":"65","hashOfConfig":"41"},{"size":5270,"mtime":1612804331913,"results":"66","hashOfConfig":"41"},{"size":1472,"mtime":1612915908038,"results":"67","hashOfConfig":"41"},{"size":1380,"mtime":1612914246947,"results":"68","hashOfConfig":"41"},{"size":1522,"mtime":1612790874775,"results":"69","hashOfConfig":"41"},{"size":1607,"mtime":1612942785081,"results":"70","hashOfConfig":"41"},{"size":537,"mtime":1612913870194,"results":"71","hashOfConfig":"41"},{"size":947,"mtime":1612913889709,"results":"72","hashOfConfig":"41"},{"size":843,"mtime":1612913881167,"results":"73","hashOfConfig":"41"},{"size":546,"mtime":1612913860694,"results":"74","hashOfConfig":"41"},{"size":2017,"mtime":1612916333377,"results":"75","hashOfConfig":"41"},{"size":1464,"mtime":1612790598842,"results":"76","hashOfConfig":"41"},{"size":484,"mtime":1612913896279,"results":"77","hashOfConfig":"41"},{"size":4255,"mtime":1612938924267,"results":"78","hashOfConfig":"41"},{"size":4317,"mtime":1612944513204,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"cuxyu1",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"82"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"82"},"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\index.js",[],["179","180"],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\loginPage\\loginForm.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\signupPage\\signUp.js",["181","182"],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport styles from \"../loginPage/Auth.module.css\";\r\nimport { message,Button } from \"antd\";\r\n\r\nconst SignUp = ({history}) => {\r\n  const [nom, setNom] = useState(\"\");\r\n  const [prenom, setPrenom] = useState(\"\");\r\n  const [tel, setTel] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log(role);\r\n      await axios.post(\"http://localhost:8080/inscription\", { nom, prenom, tel, email, password, role });\r\n      history.push('/');\r\n    } catch (err) {\r\n    //   if (err.response.status === 400) {\r\n    //     setError(err.response.data.message);\r\n    //     setTimeout(() => {\r\n    //       setError(\"\");\r\n    //     }, 3000);\r\n    //   } else message.error(\"le serveur est confronté à quelques problèmes\");\r\n    // }\r\n    console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      <form className={styles.formUp} onSubmit={handleSubmit}>\r\n        <h2 className=\"text-center\">\r\n          <strong>Créer</strong> votre compte\r\n        </h2>\r\n        {error ? (\r\n          <div class=\"alert alert-danger\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        ) : null}\r\n        <div className=\"form-group input-group\">\r\n          <input\r\n            id=\"nom\"\r\n            className={`form-control ${styles.formControl}`}\r\n            placeholder=\"Nom\"\r\n            type=\"text\"\r\n            required\r\n            onChange={(value) => setNom(value.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group input-group\">\r\n          <input\r\n            id=\"prenom\"\r\n            className={`form-control ${styles.formControl}`}\r\n            placeholder=\"Prenom\"\r\n            type=\"text\"\r\n            required\r\n            onChange={(value) => setPrenom(value.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group input-group\">\r\n          <input\r\n            id=\"tel\"\r\n            className={`form-control ${styles.formControl}`}\r\n            placeholder=\"tel\"\r\n            type=\"text\"\r\n            required\r\n            onChange={(value) => setTel(value.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group input-group\">\r\n          <input\r\n            id=\"email\"\r\n            className={`form-control ${styles.formControl}`}\r\n            placeholder=\"adresse email\"\r\n            type=\"email\"\r\n            required\r\n            onChange={(value) => setEmail(value.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group input-group\">\r\n          <input\r\n            className={`form-control ${styles.formControl}`}\r\n            placeholder=\"mot de passe\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            required\r\n            onChange={(value) => setPassword(value.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"form-check row\">\r\n          <span className=\"col\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"flexRadioDefault\"\r\n              id=\"etudiant\"\r\n              required\r\n              value=\"ROLE_ETUDIANT\"\r\n              onChange={(value) => setRole(value.target.value)}\r\n            />\r\n            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n              Etudiant\r\n            </label>\r\n          </span>\r\n          <span className=\"col\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"flexRadioDefault\"\r\n              id=\"enseignant\"\r\n              required\r\n              value=\"ROLE_PROFESSEUR\"\r\n              onChange={(value) => setRole(value.target.value)}\r\n            />\r\n            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n              Enseignant\r\n            </label>\r\n          </span>\r\n        </div>\r\n\t\t<br/>\r\n        <div className=\"form-group\">\r\n          <Button\r\n            type=\"primary\"\r\n            block\r\n\t\t\thtmlType=\"submit\"\r\n\r\n\t\t\t// className={`btn btn-primary btn-block ${styles.btnPrimary}`}\r\n          >\r\n            S'inscrire\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\NavBar.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\SignedInLinks.js",[],["183","184"],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\SignedOutLinks.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionUtilisateurs\\gestionUtilisateur.js",["185","186"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\r\nimport Navbar from \"../navBar/NavBar\";\r\nimport { EtudiantContext } from \"../contexts/etudiantContext\";\r\nimport { Input } from \"antd\";\r\nimport TableRow from \"./tableRow\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst ListUsers = () => {\r\n  const { etudiants } = useContext(EtudiantContext);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const searchColumns = [\"\"];\r\n\r\n  const search = (rows) => {\r\n    const output = rows.filter((row) =>\r\n      searchColumns.some(\r\n        (column) =>\r\n          row[column]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(searchValue.toLocaleLowerCase()) > -1\r\n      )\r\n    );\r\n    return output;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"container pt-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col mt-lg-5 container\">\r\n            <div className=\"Tete form-inline\" style={{ marginTop: \"3%\" }}>\r\n              <h2\r\n                className=\"font-weight-bold \"\r\n                style={{ marginRight: \"22%\", marginLeft: \"2%\" }}\r\n              >\r\n                Utilisateurs\r\n              </h2>\r\n              <Search\r\n                style={{ width: \"30%\", marginRight: \"23%\" }}\r\n                onChange={(value) => setSearchValue(value)}\r\n              />\r\n            </div>\r\n            <table className=\"table  table-sm table-light tab ml-md-4 green\">\r\n              <thead className=\"font-weight-normal\">\r\n                <tr className=\"shadow-sm text-primary\">\r\n                  <th scope=\"col\">Matricule</th>\r\n                  <th scope=\"col\">Nom</th>\r\n                  <th scope=\"col\">Prenom</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {search(etudiants).map((etudiant) => (\r\n                  <TableRow etudiants={etudiant} />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n",["187","188"],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionUtilisateurs\\tableRow.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\globalContext.js",["189"],"import axios from \"axios\";\r\nimport { createContext, useState } from \"react\";\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nconst GlobalContextProvider = (props) => {\r\n  const [edts, setEdts] = useState([]);\r\n  const [filieres, setFiliers] = useState([]);\r\n  const [servs, setServs] = useState([]);\r\n  const [cours, setCours] = useState([]);\r\n  const [modules, setModules] = useState([]);\r\n\r\n  const getRessourceFromApi = async (endpoint, stateSetter) => {\r\n    const headers = {\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    };\r\n    var retrievedData = new Array();\r\n    try {\r\n      retrievedData = await axios.get(endpoint, { headers: headers });\r\n      stateSetter([...retrievedData.data]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        servs,\r\n        setServs,\r\n        edts,\r\n        setEdts,\r\n        filieres,\r\n        setFiliers,\r\n        getRessourceFromApi,\r\n        cours,\r\n        setCours,\r\n        modules,\r\n        setModules\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalContextProvider;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionCours\\listCours.js",["190"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Navbar from \"../navBar/NavBar\";\r\nimport { GlobalContext } from \"../contexts/globalContext\";\r\nimport { Button, Select, Modal, Form, Input, Upload, message } from \"antd\";\r\nimport TableRow from \"./tableRow\";\r\nimport axios from \"axios\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport uuid from \"uuid/dist/v4\";\r\nconst { Dragger } = Upload;\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst { Search } = Input;\r\n\r\nconst ListCours = () => {\r\n  const {\r\n    cours,\r\n    modules,\r\n    setCours,\r\n    getRessourceFromApi,\r\n    setModules,\r\n  } = useContext(GlobalContext);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const searchColumns = [\"titre\", \"id_cours\", \"nom_module\"];\r\n  const [titre, setTitre] = useState(\"\");\r\n  const [idModule, setIdModule] = useState(0);\r\n  const [file, setFile] = useState(null);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getRessourceFromApi(\"http://localhost:8080/cours\", setCours);\r\n    getRessourceFromApi(\"http://localhost:8080/modules\", setModules);\r\n  }, []);\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    multiple: false,\r\n    onChange(info) {\r\n      setFile(info.file);\r\n    },\r\n  };\r\n\r\n  const search = (rows) => {\r\n    const output = rows.filter((row) =>\r\n      searchColumns.some((column) => {\r\n        if (column === \"nom_module\") {\r\n          return (\r\n            row.module[column]\r\n              .toString()\r\n              .toLowerCase()\r\n              .indexOf(searchValue.toLocaleLowerCase()) > -1\r\n          );\r\n        } else\r\n          return (\r\n            row[column]\r\n              .toString()\r\n              .toLowerCase()\r\n              .indexOf(searchValue.toLocaleLowerCase()) > -1\r\n          );\r\n      })\r\n    );\r\n    return output;\r\n  };\r\n\r\n  const ajouterCours = async () => {\r\n    const headers = {\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    };\r\n    try {\r\n      var payload = new FormData();\r\n      payload.append(\"file\", file);\r\n      payload.append(\"titre\", titre);\r\n      payload.append(\"idModule\", idModule);\r\n      await axios.post(\"http://localhost:8080/ajouterCours\", payload, {\r\n        headers: headers,\r\n      });\r\n      getRessourceFromApi(\"http://localhost:8080/cours\", setCours);\r\n      setVisible(false);\r\n      message.success(\"cours ajouter avec succes\");\r\n    } catch (error) {}\r\n  };\r\n\r\n  const CoursForm = (\r\n    <Modal\r\n      title=\"Ajouter cours\"\r\n      visible={visible}\r\n      onOk={ajouterCours}\r\n      onCancel={() => setVisible(false)}\r\n    >\r\n      <Form {...layout} name=\"basic\">\r\n        <Form.Item label=\"Nom du cours\" name=\"name\">\r\n          <Input onChange={(value) => setTitre(value.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item label=\"Module\">\r\n          <Select\r\n            onChange={(value) => {\r\n              setIdModule(value);\r\n            }}\r\n          >\r\n            {modules.map((module) => (\r\n              <Option value={module.id_module}>{module.nom_module}</Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"fichier de cours\">\r\n          <Dragger {...props} beforeUpload={() => false}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">\r\n              Cliquez ou faites glisser le fichier dans cette zone pour\r\n              télécharger\r\n            </p>\r\n          </Dragger>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {CoursForm}\r\n      <Navbar />\r\n      <div className=\"container pt-4\">\r\n        <div className=\"form-inline\" style={{ marginTop: \"3%\" }}>\r\n          <h2\r\n            className=\"font-weight-bold \"\r\n            style={{ marginRight: \"25%\", marginLeft: \"2%\" }}\r\n          >\r\n            Liste des cours\r\n          </h2>\r\n\r\n          <Search\r\n            style={{ width: \"35%\", marginRight: \"4%\" }}\r\n            onChange={(value) => setSearchValue(value.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"float-right\"\r\n            onClick={() => setVisible(true)}\r\n          >\r\n            <i class=\"fas fa-plus pr-sm-2\"></i>Ajouter cours\r\n          </Button>\r\n        </div>\r\n        <table className=\"table  table-sm table-light tab ml-md-4 green\">\r\n          <thead className=\"font-weight-normal\">\r\n            <tr className=\"shadow-sm text-primary\">\r\n              <th scope=\"col\">Id du cours</th>\r\n              <th scope=\"col\">Titre</th>\r\n              <th scope=\"col\">Nom du module</th>\r\n              <th scope=\"col\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {search(cours).map((cour) => (\r\n              <TableRow cours={cour} key={uuid()} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCours;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionCours\\tableRow.js",["191"],"import { Menu, Button, Dropdown, Select, Modal } from \"antd\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Form, Input, Upload, message } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { GlobalContext } from \"../contexts/globalContext\";\r\nimport axios from \"axios\";\r\nconst { Dragger } = Upload;\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst TableRow = ({ cours }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState(\"\");\r\n  const [modalText, setModalText] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [titre, setTitre] = useState(\"\");\r\n  const [idModule, setIdModule] = useState(0);\r\n  const [file, setFile] = useState({});\r\n  const { modules, setCours, getRessourceFromApi } = useContext(GlobalContext);\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    multiple: false,\r\n    onChange(info) {\r\n      setFile(info.file);\r\n    },\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setState(\"suppression\");\r\n    setModalText(\"voulez-vous vraiment supprimer ce cours\");\r\n    setModalTitle(\"Confirmation de suppression\");\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleConsult = () => {\r\n    setState(\"consultation\");\r\n    setModalText(\"voulez-vous vraiment supprimer ce cours\");\r\n    setModalTitle(\"Consultation du cours\");\r\n    setVisible(true);\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Button type=\"text\" onClick={handleDelete}>\r\n          supprimer\r\n        </Button>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item>\r\n        <Button type=\"text\" onClick={handleConsult}>\r\n          consulter\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    if (state === \"consultation\") {\r\n      setState(\"modification\");\r\n      setTitre(cours.titre);\r\n      setIdModule(cours.module.id_module);\r\n      return;\r\n    } else if (state === \"modification\") {\r\n      let headers = {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      };\r\n      try {\r\n        var payload = new FormData();\r\n        payload.append(\"file\", file);\r\n        payload.append(\"titre\", titre);\r\n        payload.append(\"idModule\", idModule);\r\n        payload.append(\"id_cours\", cours.id_cours);\r\n        await axios.put(\"http://localhost:8080/modifierCours\", payload, {\r\n          headers: headers,\r\n        });\r\n        getRessourceFromApi(\"http://localhost:8080/cours\", setCours);\r\n        setVisible(false);\r\n        message.success(\"cours modifier avec succes\");\r\n      } catch (error) {}\r\n    } else {\r\n      let headers = {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      };\r\n\r\n      try {\r\n        await axios.delete(\r\n          \"http://localhost:8080/supprimerCours/\" + cours.id_cours,\r\n          { headers: headers }\r\n        );\r\n        getRessourceFromApi(\"http://localhost:8080/cours\", setCours);\r\n        setVisible(false);\r\n        message.success(\"cours supprimer avec succes\");\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={modalTitle}\r\n        visible={visible}\r\n        onOk={handleClick}\r\n        onCancel={() => {\r\n          handleCancel();\r\n        }}\r\n      >\r\n        {modalTitle === \"Confirmation de suppression\" ? (\r\n          modalText\r\n        ) : (\r\n          <Form {...layout} name=\"basic\">\r\n            <Form.Item label=\"Nom du cours\" name=\"name\">\r\n              <Input\r\n                readOnly={state === \"modification\" ? false : true}\r\n                defaultValue={cours.titre}\r\n                onChange={(value) => setTitre(value.target.value)}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Module\" name=\"module\">\r\n              {state === \"consultation\" ? (\r\n                <Select defaultValue={cours.module.nom_module}>\r\n                  <Option>{cours.module.nom_module}</Option>\r\n                </Select>\r\n              ) : (\r\n                <Select\r\n                  defaultValue={cours.module.id_module}\r\n                  onChange={(value) => {\r\n                    setIdModule(value);\r\n                  }}\r\n                >\r\n                  {modules.map((module) => (\r\n                    <Option value={module.id_module}>\r\n                      {module.nom_module}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item\r\n              label={\r\n                state === \"modification\"\r\n                  ? \"telecharger le cours\"\r\n                  : \"visualiser le cours\"\r\n              }\r\n            >\r\n              {state === \"modification\" ? (\r\n                <Dragger {...props} beforeUpload={() => false}>\r\n                  <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined />\r\n                  </p>\r\n                  <p className=\"ant-upload-text\">\r\n                    Cliquez ou faites glisser le fichier dans cette zone pour\r\n                    télécharger\r\n                  </p>\r\n                </Dragger>\r\n              ) : (\r\n                <a\r\n                  download\r\n                  onClick={() => {\r\n                    axios({\r\n                      url: \"http://localhost:8080/download/\" + cours.chemin_document,\r\n                      method: \"GET\",\r\n                      responseType: \"blob\", // important\r\n                    }).then((response) => {\r\n                      const url = window.URL.createObjectURL(\r\n                        new Blob([response.data])\r\n                      );\r\n                      const link = document.createElement(\"a\");\r\n                      link.href = url;\r\n                      link.setAttribute(\"download\", \"file.pdf\"); //or any other extension\r\n                      document.body.appendChild(link);\r\n                      link.click();\r\n                    });\r\n                  }}\r\n                >\r\n                  cliquer pour visualiser le cours\r\n                </a>\r\n              )}\r\n            </Form.Item>\r\n          </Form>\r\n        )}\r\n      </Modal>\r\n      <tr>\r\n        <td>{cours.id_cours}</td>\r\n        <td>{cours.titre}</td>\r\n        <td>{cours.module.nom_module}</td>\r\n        <td>\r\n          <Dropdown overlay={menu} placement=\"bottomLeft\" arrow>\r\n            <Button>\r\n              <EllipsisOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\AdminLinks.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\ProfesseurLinks.js",[],["192","193"],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\navBar\\EtudiantsLinks.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionEmploisTemps\\emploisList.js",["194"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Navbar from \"../navBar/NavBar\";\r\nimport { GlobalContext } from \"../contexts/globalContext\";\r\nimport { Button, Select, Modal, Form, Input, Upload, message } from \"antd\";\r\nimport TableRow from \"./tableRow\";\r\nimport axios from \"axios\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport uuid from \"uuid/dist/v4\";\r\nconst { Dragger } = Upload;\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst { Search } = Input;\r\n\r\nconst ListEdts = () => {\r\n  const { edts, setEdts, getRessourceFromApi } = useContext(GlobalContext);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const searchColumns = [\"titre\", \"idEdt\", \"saison\"];\r\n  const [titre, setTitre] = useState(\"\");\r\n  const [saison, setSaison] = useState(\"\");\r\n  const [file, setFile] = useState({});\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    multiple: false,\r\n    onChange(info) {\r\n      setFile(info.file);\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRessourceFromApi(\"http://localhost:8080/edts\", setEdts);\r\n  }, []);\r\n\r\n  const search = (rows) => {\r\n\t  console.log(rows);\r\n    const output = rows.filter((row) =>\r\n      searchColumns.some((column) => {\r\n        return (\r\n          row[column]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(searchValue.toLocaleLowerCase()) > -1\r\n        );\r\n      })\r\n    );\r\n    return output;\r\n  };\r\n\r\n  const ajouterEdt = async () => {\r\n    const headers = {\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    };\r\n    try {\r\n      var payload = new FormData();\r\n      payload.append(\"titre\", titre);\r\n      payload.append(\"saison\", saison);\r\n      payload.append(\"file\", file);\r\n      await axios.post(\"http://localhost:8080/ajouterEdt\", payload, {\r\n        headers: headers,\r\n      });\r\n      getRessourceFromApi(\"http://localhost:8080/edts\", setEdts);\r\n      setVisible(false);\r\n\t  message.success(\"emploi du temps ajouté avec succes\");\r\n    } catch (error) {}\r\n  };\r\n\r\n  const EdtForm = (\r\n    <Modal\r\n      title=\"Ajouter emploi du temps\"\r\n      visible={visible}\r\n      onOk={ajouterEdt}\r\n      onCancel={() => setVisible(false)}\r\n    >\r\n      <Form {...layout} name=\"basic\">\r\n        <Form.Item label=\"titre de l'emploi\" name=\"name\">\r\n          <Input onChange={(value) => setTitre(value.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item label=\"Saison\">\r\n          <Select\r\n            onChange={(value) => {\r\n              setSaison(value);\r\n            }}\r\n          >\r\n            <Option value=\"automne\">automne</Option>\r\n            <Option value=\"hiver\">hiver</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"fichier de l'emploi\">\r\n          <Dragger {...props} beforeUpload={() => false}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">\r\n              Cliquez ou faites glisser le fichier dans cette zone pour\r\n              télécharger\r\n            </p>\r\n          </Dragger>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {EdtForm}\r\n      <Navbar />\r\n      <div className=\"container pt-4\">\r\n        <div className=\"form-inline\" style={{ marginTop: \"3%\" }}>\r\n          <h2\r\n            className=\"font-weight-bold \"\r\n            style={{ marginRight: \"10%\", marginLeft: \"2%\" }}\r\n          >\r\n            Liste des emplois du temps\r\n          </h2>\r\n\r\n          <Search\r\n            style={{ width: \"35%\", marginRight: \"2%\" }}\r\n            onChange={(value) => setSearchValue(value.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"float-right\"\r\n            onClick={() => setVisible(true)}\r\n          >\r\n            <i class=\"fas fa-plus pr-sm-2\"></i>Ajouter emplois\r\n          </Button>\r\n        </div>\r\n        <table className=\"table  table-sm table-light tab ml-md-4 green\">\r\n          <thead className=\"font-weight-normal\">\r\n            <tr className=\"shadow-sm text-primary\">\r\n              <th scope=\"col\">Id emploi du temps</th>\r\n              <th scope=\"col\">Titre</th>\r\n              <th scope=\"col\">Saison</th>\r\n\t\t\t  <th scope=\"col\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {search(edts).map((edt) => (\r\n              <TableRow edt={edt} key={uuid()} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListEdts;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionEmploisTemps\\tableRow.js",["195"],"import { Menu, Button, Dropdown, Select, Modal } from \"antd\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Form, Input, Upload, message } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"../contexts/globalContext\";\r\nconst { Dragger } = Upload;\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst TableRow = ({ edt }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState(\"\");\r\n  const [modalText, setModalText] = useState(\"\");\r\n  const [state, setState] = useState(\"consultation\");\r\n  const [titre, setTitre] = useState(\"\");\r\n  const [saison, setSaison] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const { setEdts, getRessourceFromApi } = useContext(GlobalContext);\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    multiple: false,\r\n    onChange(info) {\r\n      setFile(info.file);\r\n    },\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setState(\"suppression\");\r\n    setModalText(\"voulez-vous vraiment supprimer cet emplois du temps\");\r\n    setModalTitle(\"Confirmation de suppression\");\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleConsult = () => {\r\n    setModalTitle(\"Consultation de l'emploi du temps\");\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Button type=\"text\" onClick={handleDelete}>\r\n          supprimer\r\n        </Button>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item>\r\n        <Button type=\"text\" onClick={handleConsult}>\r\n          consulter\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const handleClick = async () => {\r\n    if (state === \"consultation\") {\r\n      setState(\"modification\");\r\n      return;\r\n    } else if (state === \"modification\") {\r\n      let headers = {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      };\r\n\r\n      var payload = new FormData();\r\n      payload.append(\"titre\", titre);\r\n      payload.append(\"saison\", saison);\r\n      payload.append(file, file);\r\n\r\n      try {\r\n        await axios.put(\"http://localhost:8080/modifierEdt/\", payload, {\r\n          headers: headers,\r\n        });\r\n        getRessourceFromApi(\"http://localhost:8080/edts\", setEdts);\r\n        setVisible(false);\r\n        message.success(\"emploi du temps modifier avec succes\");\r\n      } catch (error) {}\r\n    } else {\r\n      let headers = {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      };\r\n\r\n      try {\r\n        await axios.delete(\"http://localhost:8080/supprimerEdt/\" + edt.idEdt, {\r\n          headers: headers,\r\n        });\r\n        getRessourceFromApi(\"http://localhost:8080/edts\", setEdts);\r\n        setVisible(false);\r\n        message.success(\"emploi du temps supprimer avec succes\");\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={modalTitle}\r\n        visible={visible}\r\n        onOk={handleClick}\r\n        onCancel={() => {\r\n          handleCancel();\r\n        }}\r\n      >\r\n        {modalTitle === \"Confirmation de suppression\" ? (\r\n          modalText\r\n        ) : (\r\n          <Form {...layout} name=\"basic\">\r\n            <Form.Item label=\"titre de l'emplois\" name=\"titre\">\r\n              <Input\r\n                defaultValue={edt.titre}\r\n                readOnly={state === \"modification\" ? false : true}\r\n                onChange={(value) => setTitre(value.target.value)}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item label=\"Saison\">\r\n              {state === \"consultation\" ? (\r\n                <Select defaultValue={edt.saison}>\r\n                  <Option>{edt.saison}</Option>\r\n                </Select>\r\n              ) : (\r\n                <Select\r\n                  defaultValue={edt.saison}\r\n                  onChange={(value) => {\r\n                    setSaison(value);\r\n                  }}\r\n                >\r\n                  <Option value=\"printemps\">printemps</Option>\r\n                  <Option value=\"hiver\">hiver</Option>\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label={\r\n                state === \"modification\"\r\n                  ? \"telecharger le cours\"\r\n                  : \"visualiser le cours\"\r\n              }\r\n            >\r\n              {state === \"modification\" ? (\r\n                <Dragger {...props} beforeUpload={() => false}>\r\n                  <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined />\r\n                  </p>\r\n                  <p className=\"ant-upload-text\">\r\n                    Cliquez ou faites glisser le fichier dans cette zone pour\r\n                    télécharger\r\n                  </p>\r\n                </Dragger>\r\n              ) : (\r\n                <a>visualiser le document du cours</a>\r\n              )}\r\n            </Form.Item>\r\n          </Form>\r\n        )}\r\n      </Modal>\r\n      <tr>\r\n        <td>{edt.idEdt}</td>\r\n        <td>{edt.titre}</td>\r\n        <td>{edt.saison}</td>\r\n        <td>\r\n          <Dropdown overlay={menu} placement=\"bottomLeft\" arrow>\r\n            <Button>\r\n              <EllipsisOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionServices\\listService.js",["196"],"import { Input } from \"antd\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"../contexts/globalContext\";\r\nimport TableRow from \"../gestionServices/TableRow\";\r\nimport Navbar from \"../navBar/NavBar\";\r\nimport uuid from \"uuid/dist/v4\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst ListService = () => {\r\n  const { servs, setServs, getRessourceFromApi } = useContext(GlobalContext);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const searchColumns = [\"id_service\", \"description\"];\r\n\r\n  const search = (rows) => {\r\n    console.log(rows);\r\n    const output = rows.filter((row) =>\r\n      searchColumns.some(\r\n        (column) =>\r\n          row[column]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(searchValue.toLocaleLowerCase()) > -1\r\n      )\r\n    );\r\n    return output;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRessourceFromApi(\"http://localhost:8080/services\", setServs);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"container pt-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col mt-lg-5 container\">\r\n            <div className=\"Tete form-inline\" style={{ marginTop: \"3%\" }}>\r\n              <h2\r\n                className=\"font-weight-bold \"\r\n                style={{ marginRight: \"33%\", marginLeft: \"2%\" }}\r\n              >\r\n                Demandes de services\r\n              </h2>\r\n              {/* <input className=\"form-control form-control-sm col-lg-4 searchbar mr-1\" type=\"text\" placeholder= \"Recherche\" value = {q} onChange = {(e) => setQ(e.target.value)}/> */}\r\n              <Search\r\n                style={{ width: \"35%\" }}\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n              />\r\n            </div>\r\n            <table className=\"table  table-sm table-light tab ml-md-4 green\">\r\n              <thead className=\"font-weight-normal\">\r\n                <tr className=\"shadow-sm text-primary\">\r\n                  <th scope=\"col\">Id service</th>\r\n                  <th scope=\"col\">description</th>\r\n                  <th scope=\"col\">Demandeur</th>\r\n                  <th scope=\"col\">Etat</th>\r\n                  <th scope=\"col\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {search(servs).map((service) => (\r\n                  <TableRow service={service} key={uuid()} />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListService;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionServices\\TableRow.js",["197"],"import { Menu, Button, Dropdown, Select, Modal, message } from \"antd\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport { CheckOutlined, CloseOutlined, MinusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"../contexts/globalContext\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst TableRow = ({ service }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [visible1, setVisible1] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState(\"\");\r\n  const [modalText, setModalText] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [cause, setCause] = useState(\"\");\r\n  const { setServs, getRessourceFromApi } = useContext(GlobalContext);\r\n\r\n  var etat;\r\n\r\n  if (service.etat === \"en cours de traitment\")\r\n    etat = <MinusOutlined style={{ color: \"#22a7f0\" }} />;\r\n  else if (service.etat === \"accepte\")\r\n    etat = <CheckOutlined style={{ color: \"#52c41a\" }} />;\r\n  else etat = <CloseOutlined style={{ color: \"#f62459\" }} />;\r\n\r\n  const ValidationForm = (\r\n    <Form {...layout} name=\"basic\">\r\n      <Form.Item label=\"justification/reponse\" name=\"description\">\r\n        <TextArea\r\n          required\r\n          onChange={(e) => {\r\n            setCause(e.target.value);\r\n          }}\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n\r\n  const handleDelete = () => {\r\n    setState(\"suppression\");\r\n    setModalText(\"voulez-vous vraiment supprimer ce service\");\r\n    setModalTitle(\"Confirmation de suppression\");\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleConsult = () => {\r\n    setState(\"traitement\");\r\n    setModalTitle(\"Consultation du service\");\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible1(false);\r\n    setState(\"\");\r\n    setCause(\"\");\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Button type=\"text\" onClick={handleDelete}>\r\n          supprimer\r\n        </Button>\r\n      </Menu.Item>\r\n      {service.etat === \"en cours de traitement\" ? (\r\n        <Menu.Item>\r\n          <Button type=\"text\" onClick={handleConsult}>\r\n            traiter\r\n          </Button>\r\n        </Menu.Item>\r\n      ) : null}\r\n    </Menu>\r\n  );\r\n\r\n  const handleClick = async () => {\r\n    if (state === \"traitement\") {\r\n      setState(\"accept\");\r\n      setVisible(false);\r\n      setVisible1(true);\r\n    } else if (state === \"suppression\") {\r\n      let headers = {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      };\r\n      try {\r\n        await axios.delete(\r\n          \"http://localhost:8080/supprimerService/\" + service.id_service,\r\n          { headers: headers }\r\n        );\r\n        getRessourceFromApi(\"http://localhost:8080/services\", setServs);\r\n        setVisible(false);\r\n        setState(\"\");\r\n        message.success(\"service supprimer avec succes\");\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const handleClick1 = async () => {\r\n    let headers = {\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    };\r\n\r\n    let accepte;\r\n    if (state === \"refuse\") accepte = \"refuse\";\r\n    else accepte = \"accepte\";\r\n\r\n    await axios.put(\r\n      \"http://localhost:8080/modifierService\",\r\n      {\r\n        ...service,\r\n        reponse: cause,\r\n        etat: accepte,\r\n      },\r\n      { headers: headers }\r\n    );\r\n    getRessourceFromApi(\"http://localhost:8080/services\", setServs);\r\n    setVisible1(false);\r\n    setState(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={modalTitle}\r\n        visible={visible}\r\n        onOk={handleClick}\r\n        onCancel={() => {\r\n          if (state === \"suppression\") {\r\n            setVisible(false);\r\n          } else if (state === \"traitement\") {\r\n            setVisible(false);\r\n            setState(\"refuse\");\r\n            setVisible1(true);\r\n          }\r\n        }}\r\n      >\r\n        {state === \"suppression\" ? (\r\n          modalText\r\n        ) : (\r\n          <Form {...layout} name=\"basic\">\r\n            <Form.Item label=\"Description du service\" name=\"name\">\r\n              <Input.TextArea defaultValue={service.description} readOnly />\r\n            </Form.Item>\r\n          </Form>\r\n        )}\r\n      </Modal>\r\n\r\n      <Modal\r\n        title={\r\n          state === \"refuse\"\r\n            ? \"s’il vous plaît préciser la cause de votre décision\"\r\n            : \"message de réponse\"\r\n        }\r\n        visible={visible1}\r\n        onOk={handleClick1}\r\n        onCancel={handleCancel}\r\n      >\r\n        {ValidationForm}\r\n      </Modal>\r\n      <tr>\r\n        <td>{service.id_service}</td>\r\n        <td>{service.description}</td>\r\n        <td>{service.utilisateur.nom + \" \" + service.utilisateur.prenom}</td>\r\n        <td>{etat}</td>\r\n        <td>\r\n          <Dropdown overlay={menu} placement=\"bottomLeft\" arrow>\r\n            <Button>\r\n              <EllipsisOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\SemestresContext.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\CoursContext.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\ModuleContext.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\EdtContext.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\contexts\\NoteAbsenceContext.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\NoteAbsence\\NoteAbsenceProf.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\Edts\\ConsulterEdt.js",["198"],"import React, {useContext, useEffect} from 'react';\r\nimport {Table, Space, Button} from 'antd';\r\nimport NavBar from '../navBar/NavBar'\r\nimport  {EdtContext}  from \"../contexts/EdtContext\";\r\nimport EdtService from \"../services/EdtService\"\r\n\r\n\r\nconst ConsulterEdt =  () => {\r\n\r\n    const edtContext = useContext(EdtContext)\r\n    const {edts, setEdts} = edtContext\r\n\r\n\r\n    useEffect(() => {\r\n        EdtService.getAllEdts().then((res) => {\r\n            setEdts(res.data)\r\n        })\r\n    },[])\r\n\r\n    function handleClick(data){\r\n        //e.preventDefault();\r\n        console.log(data.idEdt);\r\n        //props.history.push(\"/Cours\",id_module);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Niveau',\r\n            dataIndex: 'titre',\r\n            key: 'titre'\r\n        },\r\n        {\r\n            title: 'Saison',\r\n            dataIndex: 'saison',\r\n            key: 'saison'\r\n        },\r\n        {\r\n            title : 'Action',\r\n            key : 'action',\r\n            render : (_, record) => (\r\n            <Space size=\"middle\">\r\n                <Button type=\"primary\" onClick = {() => handleClick(record)} >Télécharger</Button>\r\n            </Space>\r\n            )\r\n        }\r\n    ]\r\n    \r\n    return(\r\n        <div className = \"SaisieNoteAbsence\">\r\n            <NavBar></NavBar>\r\n            <Table columns = {columns} dataSource = {edts} rowKey={record => record.idEdt}>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConsulterEdt;","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\NoteAbsence\\NoteAbsenceEtudiant.js",["199"],"import React, { useContext, useEffect } from \"react\";\r\nimport style from \"../css/rectifpage.css\";\r\nimport { Table } from \"antd\";\r\nimport NavBar from \"../navBar/NavBar\";\r\nimport NoteAbsenceService from \"../services/NoteAbsenceService\";\r\nimport { NoteAbsenceContext } from \"../contexts/NoteAbsenceContext\";\r\n\r\nconst NoteAbsenceEtudiant = () => {\r\n  const noteAbsenceContext = useContext(NoteAbsenceContext);\r\n  const { notesAbsences, setNotesAbsences } = noteAbsenceContext;\r\n\r\n  useEffect(() => {\r\n    //J'ai besoin de l'id d'etudiant\r\n    NoteAbsenceService.getAllNotesAbsenceByEtudiant(1).then((res) => {\r\n      //console.log(res.data);\r\n      setNotesAbsences(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Module\",\r\n      dataIndex: \"module\",\r\n      key: \"module\",\r\n      width: \"50%\",\r\n      render: (module) => module.nom_module,\r\n    },\r\n    {\r\n      title: \"Note\",\r\n      dataIndex: \"note\",\r\n      key: \"note\",\r\n      width: \"25%\",\r\n    },\r\n    {\r\n      title: \"Absence\",\r\n      dataIndex: \"absence\",\r\n      key: \"absence\",\r\n      width: \"25%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <NavBar className={style.content}></NavBar>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={notesAbsences}\r\n        rowKey={(record) => record.id_note_absense}\r\n      ></Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteAbsenceEtudiant;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\Module\\ListeModuleByEtudiant.js",["200"],"import React, {useContext, useEffect} from 'react';\r\nimport {Table, Space, Button} from 'antd';\r\nimport NavBar from '../navBar/NavBar'\r\nimport {ModuleContext}  from \"../contexts/ModuleContext\"\r\nimport ModuleService from \"../services/ModuleService\"\r\n\r\n\r\nconst ListeModuleByEtudiant =  (props) => {\r\n\r\n    const modulesContext = useContext(ModuleContext)\r\n    const {modules, setModules} = modulesContext\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(props.location.state);\r\n        ModuleService.getAllModulesBySemestre(props.location.state).then((res)=>{\r\n            console.log(res.data)\r\n            setModules(res.data)\r\n        })\r\n    },[])\r\n\r\n    function handleClickCours(module){\r\n        console.log(module.id_module);\r\n        props.history.push(\"/Cours\",module.id_module);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Module',\r\n            dataIndex: 'nom_module',\r\n            key: 'nom_module'\r\n        },\r\n        {\r\n            title : 'Action',\r\n            key : 'action',\r\n            render : (_, record) => (\r\n            <Space size=\"middle\">\r\n                <Button type=\"primary\" onClick = {() => handleClickCours(record)}>Cours</Button>\r\n            </Space>\r\n            )\r\n        }\r\n    ]\r\n    \r\n    \r\n    return(\r\n        <div className = \"ListeModulesByEtudiant\">\r\n            <NavBar></NavBar>\r\n            <Table columns = {columns} dataSource = {modules} rowKey={record => record.id_module} ></Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListeModuleByEtudiant;","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\Cours\\ConsulterCours.js",["201","202","203"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Table, Space, Button } from \"antd\";\r\nimport NavBar from \"../navBar/NavBar\";\r\nimport { CoursContext } from \"../contexts/CoursContext\";\r\nimport CoursService from \"../services/CoursService\";\r\nimport axios from \"axios\";\r\n\r\nconst ConsulterCours = (id_module) => {\r\n  const coursContext = useContext(CoursContext);\r\n  const { cours, setCours } = coursContext;\r\n\r\n  useEffect(() => {\r\n    CoursService.getAllCoursByModule(id_module).then((res) => {\r\n      setCours(res.data);\r\n    });\r\n  }, []);\r\n\r\n  function handleClick(data) {\r\n    //e.preventDefault();\r\n    console.log(data.id_cours);\r\n    //props.history.push(\"/Cours\",id_module);\r\n  }\r\n\r\n  console.log(id_module.location.state);\r\n  const columns = [\r\n    {\r\n      title: \"Titre\",\r\n      dataIndex: \"titre\",\r\n      key: \"titre\",\r\n    },\r\n    {\r\n      title: \"Cours\",\r\n      dataIndex: \"cours\",\r\n      key: \"cours\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            type=\"primary\"\r\n            // onClick={}\r\n          >Télécharger</Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  /*const cours = [\r\n        {\r\n            titre : 'cours',\r\n            cours : 'fichier',\r\n            key : '1',\r\n        }\r\n    ]*/\r\n\r\n  return (\r\n    <div className=\"ConsulterCours\">\r\n      <NavBar></NavBar>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={cours}\r\n        rowKey={(record) => record.id_cours}\r\n      ></Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConsulterCours;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\services\\EdtService.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\services\\NoteAbsenceService.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\services\\ModuleService.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\services\\CoursService.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\Module\\ListeModulesByProf.js",["204","205"],"import React, {createContext, useContext, useEffect} from 'react';\r\nimport {Table, Space, Button} from 'antd';\r\nimport NavBar from '../navBar/NavBar'\r\nimport  {ModuleContext}  from \"../contexts/ModuleContext\"\r\nimport ModuleService from \"../services/ModuleService\"\r\n\r\nconst ListeModulesByProf =  (props) => {\r\n\r\n    const modulesContext = useContext(ModuleContext)\r\n    const {modules, setModules} = modulesContext\r\n\r\n\r\n    useEffect(() => {\r\n        //On doit recuperer l'email depuis la connexion du prof \r\n        //console.log(id_prof);\r\n        ModuleService.getIdProfByEmail(localStorage.getItem(\"user_email\")).then((res) => {\r\n            ModuleService.getAllModulesByProf(res.data.id).then((result) => {\r\n                setModules(result.data)\r\n            })\r\n        })\r\n    },[]) \r\n\r\n    // useEffect(() => {\r\n    //     //On doit recuperer l'email depuis la connexion du prof \r\n    //     //console.log(id_prof);\r\n    //     console.log(professeur.id);\r\n    //     ModuleService.getAllModulesByProf(professeur.id).then((res) => {\r\n    //         setModules(res.data)\r\n    //     })\r\n    // },[]) \r\n    \r\n\r\n    function handleClickNotesAbsence(module){\r\n        console.log(module.id_module);\r\n        props.history.push(\"/NoteAbsenceProf\",module.id_module);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Module',\r\n            dataIndex: 'nom_module',\r\n            key: 'nom_module'\r\n        },\r\n        {\r\n            title : 'Action',\r\n            key : 'action',\r\n            render : (_, record) => (\r\n            <Space size=\"middle\">\r\n                <Button type=\"primary\" onClick = {() => handleClickNotesAbsence(record)}>Notes et Absences</Button>\r\n            </Space>\r\n            )\r\n        }\r\n    ]\r\n    \r\n    \r\n    return(\r\n        <div className = \"ListeModulesByProf\">\r\n            <NavBar></NavBar>\r\n            <Table columns = {columns} dataSource = {modules} rowKey={record => record.id_module} ></Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListeModulesByProf;","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\Semestres\\ConsulterSemestres.js",["206"],"import React, {useContext, useEffect} from 'react';\r\nimport {Table, Space, Button} from 'antd';\r\nimport NavBar from '../navBar/NavBar'\r\nimport {SemestresContext}  from \"../contexts/SemestresContext\"\r\nimport SemestresService from \"../services/SemestresService\"\r\n\r\n\r\nconst ConsulterSemestres =  (props) => {\r\n\r\n    const semestresContext = useContext(SemestresContext)\r\n    const {semestres, setSemestres} = semestresContext\r\n\r\n\r\n    useEffect(() => {\r\n        SemestresService.getAllSemestres().then((res) => {\r\n            setSemestres(res.data)\r\n        })\r\n    },[])\r\n\r\n    function handleClick(data){\r\n        //e.preventDefault();\r\n        console.log(data.id_semestre);\r\n        props.history.push(\"/ModulesEtudiant\",data.id_semestre);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Titre',\r\n            dataIndex: 'id_semestre',\r\n            key: 'id_semestre'\r\n        },\r\n        {\r\n            title : 'Action',\r\n            key : 'action',\r\n            render : (_, record) => (\r\n            <Space size=\"middle\">\r\n                <Button type=\"primary\" onClick = {() => handleClick(record)}>Modules</Button>\r\n            </Space>\r\n            )\r\n        }\r\n    ]\r\n    \r\n    return(\r\n        <div className = \"ConsulterSemestres\">\r\n            <NavBar></NavBar>\r\n            <Table columns = {columns} dataSource = {semestres} rowKey={record => record.id_semestre}></Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConsulterSemestres;","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\services\\SemestresService.js",[],"C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionServicesEtudiant\\listService.js",["207"],"import { Input, message, Button, Modal, Form } from \"antd\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"../contexts/globalContext\";\r\nimport TableRow from \"../gestionServicesEtudiant/TableRow\";\r\nimport Navbar from \"../navBar/NavBar\";\r\nimport uuid from \"uuid/dist/v4\";\r\nimport axios from \"axios\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst ListServiceEtudiant = () => {\r\n  const { servs, setServs, getRessourceFromApi } = useContext(GlobalContext);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const searchColumns = [\"id_service\", \"description\"];\r\n  const [visible, setVisible] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const search = (rows) => {\r\n    const o = rows.filter(\r\n      (row) => row.utilisateur.email === localStorage.getItem(\"user_email\")\r\n    );\r\n    const output = o.filter((row) =>\r\n      searchColumns.some(\r\n        (column) =>\r\n          row[column]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(searchValue.toLocaleLowerCase()) > -1\r\n      )\r\n    );\r\n    return output;\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    const headers = {\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    };\r\n    try{\r\n      await axios.post(\"http://localhost:8080/ajouterService\",{etat :\"en cours de traitement\",description,email : localStorage.getItem(\"user_email\")},{headers:headers});\r\n      getRessourceFromApi(\"http://localhost:8080/services\", setServs);\r\n      setVisible(false);\r\n      message.success(\"demande de service ajouté avec succes\");\r\n    }catch(error){\r\n\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRessourceFromApi(\"http://localhost:8080/services\", setServs);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"container pt-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col mt-lg-5 container\">\r\n            <div className=\"Tete form-inline\" style={{ marginTop: \"3%\" }}>\r\n              <h2\r\n                className=\"font-weight-bold \"\r\n                style={{ marginRight: \"10%\", marginLeft: \"2%\" }}\r\n              >\r\n                Demandes de services\r\n              </h2>\r\n              {/* <input className=\"form-control form-control-sm col-lg-4 searchbar mr-1\" type=\"text\" placeholder= \"Recherche\" value = {q} onChange = {(e) => setQ(e.target.value)}/> */}\r\n              <Search\r\n                style={{ width: \"35%\",marginRight:\"5%\" }}\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n              />\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"float-right\"\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                <i class=\"fas fa-plus pr-sm-2\"></i>Demander un service\r\n              </Button>\r\n              <Modal\r\n                title=\"Demander un service aupres de l'administration\"\r\n                visible={visible}\r\n                onOk={handleClick}\r\n                onCancel={() => {\r\n                  setVisible(false);\r\n                }}\r\n              >\r\n                <Form {...layout} name=\"basic\">\r\n                  <Form.Item label=\"Description du service\" name=\"name\">\r\n                    <Input.TextArea\r\n                      onChange = {(e) => setDescription(e.target.value)}\r\n                    />\r\n                  </Form.Item>\r\n                </Form>\r\n              </Modal>\r\n            </div>\r\n            <table className=\"table  table-sm table-light tab ml-md-4 green\">\r\n              <thead className=\"font-weight-normal\">\r\n                <tr className=\"shadow-sm text-primary\">\r\n                  <th scope=\"col\">Id service</th>\r\n                  <th scope=\"col\">description</th>\r\n                  <th scope=\"col\">Etat</th>\r\n                  <th scope=\"col\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {search(servs).map((service) => (\r\n                  <TableRow service={service} key={uuid()} />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListServiceEtudiant;\r\n","C:\\Users\\HP\\Desktop\\FrontJee\\jee-front\\src\\gestionServicesEtudiant\\TableRow.js",["208","209","210","211"],"import { Menu, Button, Dropdown, Select, Modal, message } from \"antd\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport { CheckOutlined, CloseOutlined, MinusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"../contexts/globalContext\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst TableRow = ({ service }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState(\"\");\r\n  const [modalText, setModalText] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [cause, setCause] = useState(\"\");\r\n  const { setServs, getRessourceFromApi } = useContext(GlobalContext);\r\n\r\n  var etat;\r\n\r\n  if (service.etat === \"en cours de traitment\")\r\n    etat = <MinusOutlined style={{ color: \"#22a7f0\" }} />;\r\n  else if (service.etat === \"accepte\")\r\n    etat = <CheckOutlined style={{ color: \"#52c41a\" }} />;\r\n  else etat = <CloseOutlined style={{ color: \"#f62459\" }} />;\r\n\r\n  const handleDelete = () => {\r\n    setState(\"suppression\");\r\n    setModalText(\"voulez-vous vraiment supprimer cette demande\");\r\n    setModalTitle(\"Confirmation de suppression\");\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleConsult = () => {\r\n    setState(\"consultation\");\r\n    setModalTitle(\"Consultation du demande de service\");\r\n    setVisible(true);\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Button type=\"text\" onClick={handleDelete}>\r\n          supprimer\r\n        </Button>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Button type=\"text\" onClick={handleConsult}>\r\n          consulter\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const handleClick = async () => {\r\n    if (state === \"consultation\") {\r\n      setVisible(false);\r\n    } else if (state === \"suppression\") {\r\n      let headers = {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      };\r\n      try {\r\n        await axios.delete(\r\n          \"http://localhost:8080/supprimerService/\" + service.id_service,\r\n          { headers: headers }\r\n        );\r\n        getRessourceFromApi(\"http://localhost:8080/services\", setServs);\r\n        setVisible(false);\r\n        setState(\"\");\r\n        message.success(\"service supprimer avec succes\");\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  // const handleClick1 = async () => {\r\n  //   let headers = {\r\n  //     Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n  //   };\r\n\r\n  //   let accepte;\r\n  //   if (state === \"refuse\") accepte = \"refuse\";\r\n  //   else accepte = \"accepte\";\r\n\r\n  //   await axios.put(\r\n  //     \"http://localhost:8080/modifierService\",\r\n  //     {\r\n  //       ...service,\r\n  //       reponse: cause,\r\n  //       etat: accepte,\r\n  //     },\r\n  //     { headers: headers }\r\n  //   );\r\n  //   getRessourceFromApi(\"http://localhost:8080/services\", setServs);\r\n  //   setVisible1(false);\r\n  //   setState(\"\");\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={modalTitle}\r\n        visible={visible}\r\n        onOk={handleClick}\r\n        onCancel={() => setVisible(false)}\r\n      >\r\n        {state === \"suppression\" ? (\r\n          modalText\r\n        ) : (\r\n          <Form {...layout} name=\"basic\">\r\n            <Form.Item label=\"Description du service\" name=\"name\">\r\n              <Input.TextArea defaultValue={service.description} readOnly />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"etat\">\r\n              <Input defaultValue={service.etat} readOnly />\r\n            </Form.Item>\r\n            {service.etat === \"accepte\" || service.etat === \"refuse\" ? (\r\n              <Form.Item label=\"reponse de l'admin\">\r\n                <Input.TextArea defaultValue={service.reponse} readOnly />\r\n              </Form.Item>\r\n            ) : null}\r\n          </Form>\r\n        )}\r\n      </Modal>\r\n      <tr>\r\n        <td>{service.id_service}</td>\r\n        <td>{service.description}</td>\r\n        <td>{etat}</td>\r\n        <td>\r\n          <Dropdown overlay={menu} placement=\"bottomLeft\" arrow>\r\n            <Button>\r\n              <EllipsisOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n",{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":17},{"ruleId":"216","severity":1,"message":"220","line":13,"column":17,"nodeType":"218","messageId":"219","endLine":13,"endColumn":25},{"ruleId":"212","replacedBy":"221"},{"ruleId":"214","replacedBy":"222"},{"ruleId":"216","severity":1,"message":"223","line":1,"column":39,"nodeType":"218","messageId":"219","endLine":1,"endColumn":48},{"ruleId":"216","severity":1,"message":"224","line":1,"column":50,"nodeType":"218","messageId":"219","endLine":1,"endColumn":61},{"ruleId":"212","replacedBy":"225"},{"ruleId":"214","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":17,"column":25,"nodeType":"229","messageId":"230","endLine":17,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":38,"column":6,"nodeType":"233","endLine":38,"endColumn":8,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":168,"column":17,"nodeType":"237","endLine":186,"endColumn":18},{"ruleId":"212","replacedBy":"238"},{"ruleId":"214","replacedBy":"239"},{"ruleId":"231","severity":1,"message":"240","line":37,"column":6,"nodeType":"233","endLine":37,"endColumn":8,"suggestions":"241"},{"ruleId":"235","severity":1,"message":"236","line":161,"column":17,"nodeType":"237","endLine":161,"endColumn":20},{"ruleId":"231","severity":1,"message":"242","line":31,"column":6,"nodeType":"233","endLine":31,"endColumn":8,"suggestions":"243"},{"ruleId":"216","severity":1,"message":"244","line":1,"column":34,"nodeType":"218","messageId":"219","endLine":1,"endColumn":40},{"ruleId":"231","severity":1,"message":"245","line":18,"column":7,"nodeType":"233","endLine":18,"endColumn":9,"suggestions":"246"},{"ruleId":"231","severity":1,"message":"247","line":18,"column":6,"nodeType":"233","endLine":18,"endColumn":8,"suggestions":"248"},{"ruleId":"231","severity":1,"message":"249","line":20,"column":7,"nodeType":"233","endLine":20,"endColumn":9,"suggestions":"250"},{"ruleId":"216","severity":1,"message":"251","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":13},{"ruleId":"231","severity":1,"message":"252","line":16,"column":6,"nodeType":"233","endLine":16,"endColumn":8,"suggestions":"253"},{"ruleId":"216","severity":1,"message":"254","line":18,"column":12,"nodeType":"218","messageId":"219","endLine":18,"endColumn":23},{"ruleId":"216","severity":1,"message":"255","line":1,"column":16,"nodeType":"218","messageId":"219","endLine":1,"endColumn":29},{"ruleId":"231","severity":1,"message":"256","line":21,"column":7,"nodeType":"233","endLine":21,"endColumn":9,"suggestions":"257"},{"ruleId":"231","severity":1,"message":"258","line":18,"column":7,"nodeType":"233","endLine":18,"endColumn":9,"suggestions":"259"},{"ruleId":"231","severity":1,"message":"242","line":55,"column":6,"nodeType":"233","endLine":55,"endColumn":8,"suggestions":"260"},{"ruleId":"216","severity":1,"message":"244","line":1,"column":34,"nodeType":"218","messageId":"219","endLine":1,"endColumn":40},{"ruleId":"216","severity":1,"message":"261","line":9,"column":9,"nodeType":"218","messageId":"219","endLine":9,"endColumn":17},{"ruleId":"216","severity":1,"message":"262","line":21,"column":10,"nodeType":"218","messageId":"219","endLine":21,"endColumn":15},{"ruleId":"216","severity":1,"message":"263","line":21,"column":17,"nodeType":"218","messageId":"219","endLine":21,"endColumn":25},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.",["264"],["265"],"'useEffect' is defined but never used.","'useCallback' is defined but never used.",["264"],["265"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRessourceFromApi', 'setCours', and 'setModules'. Either include them or remove the dependency array.","ArrayExpression",["266"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["264"],["265"],"React Hook useEffect has missing dependencies: 'getRessourceFromApi' and 'setEdts'. Either include them or remove the dependency array.",["267"],"React Hook useEffect has missing dependencies: 'getRessourceFromApi' and 'setServs'. Either include them or remove the dependency array.",["268"],"'Select' is defined but never used.","React Hook useEffect has a missing dependency: 'setEdts'. Either include it or remove the dependency array.",["269"],"React Hook useEffect has a missing dependency: 'setNotesAbsences'. Either include it or remove the dependency array.",["270"],"React Hook useEffect has missing dependencies: 'props.location.state' and 'setModules'. Either include them or remove the dependency array.",["271"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'id_module' and 'setCours'. Either include them or remove the dependency array.",["272"],"'handleClick' is defined but never used.","'createContext' is defined but never used.","React Hook useEffect has a missing dependency: 'setModules'. Either include it or remove the dependency array.",["273"],"React Hook useEffect has a missing dependency: 'setSemestres'. Either include it or remove the dependency array.",["274"],["275"],"'TextArea' is assigned a value but never used.","'cause' is assigned a value but never used.","'setCause' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"280","fix":"294"},"Update the dependencies array to be: [getRessourceFromApi, setCours, setModules]",{"range":"295","text":"296"},"Update the dependencies array to be: [getRessourceFromApi, setEdts]",{"range":"297","text":"298"},"Update the dependencies array to be: [getRessourceFromApi, setServs]",{"range":"299","text":"300"},"Update the dependencies array to be: [setEdts]",{"range":"301","text":"302"},"Update the dependencies array to be: [setNotesAbsences]",{"range":"303","text":"304"},"Update the dependencies array to be: [props.location.state, setModules]",{"range":"305","text":"306"},"Update the dependencies array to be: [id_module, setCours]",{"range":"307","text":"308"},"Update the dependencies array to be: [setModules]",{"range":"309","text":"310"},"Update the dependencies array to be: [setSemestres]",{"range":"311","text":"312"},{"range":"313","text":"300"},[1184,1186],"[getRessourceFromApi, setCours, setModules]",[1167,1169],"[getRessourceFromApi, setEdts]",[948,950],"[getRessourceFromApi, setServs]",[488,490],"[setEdts]",[688,690],"[setNotesAbsences]",[645,647],"[props.location.state, setModules]",[548,550],"[id_module, setCours]",[787,789],"[setModules]",[565,567],"[setSemestres]",[1806,1808]]